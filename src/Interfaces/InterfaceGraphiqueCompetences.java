/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import Competence.Competence;
import Entreprise.Entreprise;
import Personnel.Personnel;
import java.io.IOException;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author clementraphaell
 */
public class InterfaceGraphiqueCompetences extends javax.swing.JFrame {
    Entreprise entreprise;
    /**
     * Creates new form InterfaceGraphiqueCompetences
     */
    public InterfaceGraphiqueCompetences() throws IOException {
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        initComponents();
        this.entreprise = new Entreprise();
        this.entreprise.initDonnees();
        this.initTabCompetences();
    }
    
    private void initTabCompetences() {
        DefaultTableModel model = (DefaultTableModel) jTableCompet.getModel();
        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int j = rowCount - 1; j >= 0; j--) {
            model.removeRow(j);
        }
        Iterator i = this.entreprise.getTCompetences().keySet().iterator();
        String clef = null;
        Competence valeur = null;
        while (i.hasNext()){
            clef = (String)i.next();
            valeur = this.entreprise.getTCompetences().get(clef);
            model.addRow(new Object[]{valeur.getId(), valeur.getLibelleFr(), valeur.getLibelleEn()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DialogConfirmationSuppComp = new javax.swing.JDialog();
        PanelConfSuppComp = new javax.swing.JPanel();
        LabelQuestConfSuppComp = new javax.swing.JLabel();
        jDialogLibFr = new javax.swing.JLabel();
        jDialogLibEn = new javax.swing.JLabel();
        confirmeSuppOui = new javax.swing.JButton();
        confirmeSuppNon = new javax.swing.JButton();
        PanelCompetence = new javax.swing.JPanel();
        buttonAjouteComp = new javax.swing.JButton();
        buttonModifComp = new javax.swing.JButton();
        labelCompComp = new javax.swing.JLabel();
        labelListeComp = new javax.swing.JLabel();
        erreurModif = new javax.swing.JLabel();
        ButtonSauvegarder = new javax.swing.JButton();
        buttonRetourAjoutePers = new javax.swing.JButton();
        LabelIdComp = new javax.swing.JLabel();
        TextFieldId = new javax.swing.JTextField();
        LabelLibFrComp = new javax.swing.JLabel();
        TextFieldLibFrComp = new javax.swing.JTextField();
        TextFieldLibEnComp = new javax.swing.JTextField();
        LabelLibEnComp = new javax.swing.JLabel();
        buttonSuppComp = new javax.swing.JButton();
        ButtonActuComp = new javax.swing.JButton();
        ScrollPaneComp = new javax.swing.JScrollPane();
        jTableCompet = new javax.swing.JTable();
        LabelActuComp = new javax.swing.JLabel();

        LabelQuestConfSuppComp.setText("Etes vous sure de vouloir supprimer la compétence :");

        jDialogLibFr.setText("Libellé fr");

        jDialogLibEn.setText("Libellé en");

        confirmeSuppOui.setText("Oui");
        confirmeSuppOui.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                confirmeSuppOuiMouseClicked(evt);
            }
        });
        confirmeSuppOui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmeSuppOuiActionPerformed(evt);
            }
        });

        confirmeSuppNon.setText("Non");
        confirmeSuppNon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                confirmeSuppNonMouseClicked(evt);
            }
        });
        confirmeSuppNon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmeSuppNonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelConfSuppCompLayout = new javax.swing.GroupLayout(PanelConfSuppComp);
        PanelConfSuppComp.setLayout(PanelConfSuppCompLayout);
        PanelConfSuppCompLayout.setHorizontalGroup(
            PanelConfSuppCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelConfSuppCompLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelConfSuppCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelConfSuppCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(LabelQuestConfSuppComp)
                        .addGroup(PanelConfSuppCompLayout.createSequentialGroup()
                            .addComponent(confirmeSuppOui)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(confirmeSuppNon)
                            .addGap(11, 11, 11)))
                    .addGroup(PanelConfSuppCompLayout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(PanelConfSuppCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDialogLibEn)
                            .addComponent(jDialogLibFr))))
                .addContainerGap(169, Short.MAX_VALUE))
        );
        PanelConfSuppCompLayout.setVerticalGroup(
            PanelConfSuppCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelConfSuppCompLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelQuestConfSuppComp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jDialogLibFr)
                .addGap(18, 18, 18)
                .addComponent(jDialogLibEn)
                .addGap(23, 23, 23)
                .addGroup(PanelConfSuppCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmeSuppOui)
                    .addComponent(confirmeSuppNon))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout DialogConfirmationSuppCompLayout = new javax.swing.GroupLayout(DialogConfirmationSuppComp.getContentPane());
        DialogConfirmationSuppComp.getContentPane().setLayout(DialogConfirmationSuppCompLayout);
        DialogConfirmationSuppCompLayout.setHorizontalGroup(
            DialogConfirmationSuppCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelConfSuppComp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        DialogConfirmationSuppCompLayout.setVerticalGroup(
            DialogConfirmationSuppCompLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelConfSuppComp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 51, 51));

        PanelCompetence.setBackground(new java.awt.Color(225, 225, 213));

        buttonAjouteComp.setText("Ajouter");
        buttonAjouteComp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonAjouteCompMouseClicked(evt);
            }
        });

        buttonModifComp.setText("Modifier");
        buttonModifComp.setEnabled(false);
        buttonModifComp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonModifCompMouseClicked(evt);
            }
        });

        labelCompComp.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        labelCompComp.setText("Compétences");

        labelListeComp.setText("Liste :");

        ButtonSauvegarder.setText("Sauvegarder la base de données");
        ButtonSauvegarder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ButtonSauvegarderMouseClicked(evt);
            }
        });
        ButtonSauvegarder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSauvegarderActionPerformed(evt);
            }
        });

        buttonRetourAjoutePers.setText("Retour");
        buttonRetourAjoutePers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonRetourAjoutePersMouseClicked(evt);
            }
        });

        LabelIdComp.setText("Identifiant : ");

        TextFieldId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldIdActionPerformed(evt);
            }
        });

        LabelLibFrComp.setText("Libellé en français :");

        LabelLibEnComp.setText("Libellé en anglais :");

        buttonSuppComp.setText("Supprimer");
        buttonSuppComp.setEnabled(false);
        buttonSuppComp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonSuppCompMouseClicked(evt);
            }
        });
        buttonSuppComp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSuppCompActionPerformed(evt);
            }
        });

        ButtonActuComp.setText("Actualiser la liste de compétence");
        ButtonActuComp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ButtonActuCompMouseClicked(evt);
            }
        });

        jTableCompet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identifiant", "Libellé français", "Libellé anglais"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableCompet.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableCompet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCompetMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableCompetMouseReleased(evt);
            }
        });
        ScrollPaneComp.setViewportView(jTableCompet);

        LabelActuComp.setText("Actualiser le tableau après un ajout :");

        javax.swing.GroupLayout PanelCompetenceLayout = new javax.swing.GroupLayout(PanelCompetence);
        PanelCompetence.setLayout(PanelCompetenceLayout);
        PanelCompetenceLayout.setHorizontalGroup(
            PanelCompetenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelCompetenceLayout.createSequentialGroup()
                .addGap(656, 656, 656)
                .addComponent(labelCompComp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(404, 404, 404))
            .addGroup(PanelCompetenceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelListeComp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(PanelCompetenceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelCompetenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelCompetenceLayout.createSequentialGroup()
                        .addComponent(ScrollPaneComp, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(PanelCompetenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelIdComp)
                            .addComponent(TextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabelLibFrComp)
                            .addComponent(LabelLibEnComp)
                            .addGroup(PanelCompetenceLayout.createSequentialGroup()
                                .addComponent(buttonAjouteComp, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonModifComp, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonSuppComp, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PanelCompetenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(TextFieldLibFrComp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
                                .addComponent(TextFieldLibEnComp, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(ButtonActuComp)
                            .addComponent(LabelActuComp)
                            .addComponent(erreurModif, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PanelCompetenceLayout.createSequentialGroup()
                        .addComponent(buttonRetourAjoutePers)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ButtonSauvegarder)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelCompetenceLayout.setVerticalGroup(
            PanelCompetenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCompetenceLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(labelCompComp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelListeComp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelCompetenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelCompetenceLayout.createSequentialGroup()
                        .addComponent(LabelIdComp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelLibFrComp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextFieldLibFrComp, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelLibEnComp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextFieldLibEnComp, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addGroup(PanelCompetenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonAjouteComp, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(PanelCompetenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(buttonModifComp, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buttonSuppComp, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(erreurModif, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(LabelActuComp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButtonActuComp, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 193, Short.MAX_VALUE))
                    .addComponent(ScrollPaneComp))
                .addGap(18, 18, 18)
                .addGroup(PanelCompetenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonRetourAjoutePers)
                    .addComponent(ButtonSauvegarder))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelCompetence, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelCompetence, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAjouteCompMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAjouteCompMouseClicked
        // TODO add your handling code here:
        interfaceGraphiqueAjouteComp AjoutComp = null;
        try {
            AjoutComp = new interfaceGraphiqueAjouteComp();
        } catch (IOException ex) {
            Logger.getLogger(InterfaceGraphiqueCompetences.class.getName()).log(Level.SEVERE, null, ex);
        }
        AjoutComp.setVisible(true);
        
    }//GEN-LAST:event_buttonAjouteCompMouseClicked

    private void buttonModifCompMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonModifCompMouseClicked
        if ( this.jTableCompet.getSelectedRowCount() !=0 ) {
            if ( this.entreprise.modifCompétence(this.TextFieldId.getText(), this.TextFieldLibEnComp.getText(), this.TextFieldLibFrComp.getText()) ) {
                this.erreurModif.setText("Modification bien éffectué");
                this.initTabCompetences();
                this.TextFieldId.setText("");
                this.TextFieldLibEnComp.setText("");
                this.TextFieldLibFrComp.setText("");
            } else {
                this.erreurModif.setText("Modification non éffectué");
            }
        } else {
            this.erreurModif.setText("Veuillez selectionner une competence");
        }
    }//GEN-LAST:event_buttonModifCompMouseClicked

    private void ButtonSauvegarderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonSauvegarderMouseClicked
        try {
            this.entreprise.sauvegarderTout();
        } catch (IOException ex) {
            Logger.getLogger(interfaceGraphiqueAjoutePerso.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ButtonSauvegarderMouseClicked

    private void buttonRetourAjoutePersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonRetourAjoutePersMouseClicked
        interfaceGraphiqueAccueil  Accueil = null;
        try {
            Accueil = new interfaceGraphiqueAccueil();
        } catch (NumberFormatException ex) {
            Logger.getLogger(InterfaceGraphiqueMissions.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(InterfaceGraphiqueMissions.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
        Accueil.setVisible(true);
    }//GEN-LAST:event_buttonRetourAjoutePersMouseClicked

    private void buttonSuppCompMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonSuppCompMouseClicked

        if ( this.jTableCompet.getSelectedRowCount() !=0 ) {
            this.jDialogLibEn.setText(this.TextFieldLibEnComp.getText());
            this.jDialogLibFr.setText(this.TextFieldLibFrComp.getText());
            DialogConfirmationSuppComp.setSize(350, 250);
            this.DialogConfirmationSuppComp.setVisible(true);
        } else {
            this.erreurModif.setText("Veuillez selectionner une competence");
        }
    }//GEN-LAST:event_buttonSuppCompMouseClicked

    private void ButtonActuCompMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonActuCompMouseClicked
        this.initTabCompetences();
    }//GEN-LAST:event_ButtonActuCompMouseClicked

    private void buttonSuppCompActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSuppCompActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonSuppCompActionPerformed

    private void jTableCompetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCompetMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTableCompetMouseClicked

    private void jTableCompetMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCompetMouseReleased
        if ( this.jTableCompet.getSelectedRowCount() !=0 ) {
            this.buttonModifComp.setEnabled(true);
            this.buttonSuppComp.setEnabled(true);
            DefaultTableModel model = (DefaultTableModel) this.jTableCompet.getModel();
            Competence c = this.entreprise.getTCompetences().get(""+model.getValueAt(this.jTableCompet.getSelectedRow(), 0));
            this.TextFieldId.setText(c.getId());
            this.TextFieldLibFrComp.setText(c.getLibelleFr());
            this.TextFieldLibEnComp.setText(c.getLibelleEn());
        } else {
            this.erreurModif.setText("Veuillez selectionner une competence");
        }
    }//GEN-LAST:event_jTableCompetMouseReleased

    private void confirmeSuppOuiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmeSuppOuiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_confirmeSuppOuiActionPerformed

    private void confirmeSuppNonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmeSuppNonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_confirmeSuppNonActionPerformed

    private void confirmeSuppOuiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmeSuppOuiMouseClicked
        if (entreprise.supCompétence(this.TextFieldId.getText()) ) {
            this.erreurModif.setText("Suppression bien effectuée");
            this.initTabCompetences();
            this.TextFieldId.setText("");
            this.TextFieldLibEnComp.setText("");
            this.TextFieldLibFrComp.setText("");
        } else {
            this.erreurModif.setText("Suppression non effectuée");
        }
        this.DialogConfirmationSuppComp.setVisible(false);
    }//GEN-LAST:event_confirmeSuppOuiMouseClicked

    private void confirmeSuppNonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmeSuppNonMouseClicked
        this.DialogConfirmationSuppComp.setVisible(false);
    }//GEN-LAST:event_confirmeSuppNonMouseClicked

    private void ButtonSauvegarderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSauvegarderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonSauvegarderActionPerformed

    private void TextFieldIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldIdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfaceGraphiqueCompetences.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfaceGraphiqueCompetences.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfaceGraphiqueCompetences.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfaceGraphiqueCompetences.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new InterfaceGraphiqueCompetences().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(InterfaceGraphiqueCompetences.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonActuComp;
    private javax.swing.JButton ButtonSauvegarder;
    private javax.swing.JDialog DialogConfirmationSuppComp;
    private javax.swing.JLabel LabelActuComp;
    private javax.swing.JLabel LabelIdComp;
    private javax.swing.JLabel LabelLibEnComp;
    private javax.swing.JLabel LabelLibFrComp;
    private javax.swing.JLabel LabelQuestConfSuppComp;
    private javax.swing.JPanel PanelCompetence;
    private javax.swing.JPanel PanelConfSuppComp;
    private javax.swing.JScrollPane ScrollPaneComp;
    private javax.swing.JTextField TextFieldId;
    private javax.swing.JTextField TextFieldLibEnComp;
    private javax.swing.JTextField TextFieldLibFrComp;
    private javax.swing.JButton buttonAjouteComp;
    private javax.swing.JButton buttonModifComp;
    private javax.swing.JButton buttonRetourAjoutePers;
    private javax.swing.JButton buttonSuppComp;
    private javax.swing.JButton confirmeSuppNon;
    private javax.swing.JButton confirmeSuppOui;
    private javax.swing.JLabel erreurModif;
    private javax.swing.JLabel jDialogLibEn;
    private javax.swing.JLabel jDialogLibFr;
    private javax.swing.JTable jTableCompet;
    private javax.swing.JLabel labelCompComp;
    private javax.swing.JLabel labelListeComp;
    // End of variables declaration//GEN-END:variables
}
